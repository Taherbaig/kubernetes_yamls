#A stateful application saves data about each client session that occurs and
#holds on to that data until the next time the client issues a request. The
#data which is saved is known as the state of the app, hence the term
#stateful. How is that data stored? Either locally or on a remote host until
#the time at which the user logs out, or following a predetermined amount of
#time when the session is set to expire.

#A stateless application, by contrast, is an application program that
#doesnâ€™t save client data generated in one session for use in the next with
#the same client. HTTP, for instance, is inherently stateless. This means
#that when a state is desired for a web app, stateful features need to be
#built in with dynamic pages. The pages can store sessions via web address
#variables and server and client-side stored data, such as via cookies.

#kubectl run -it --rm --image=mysql:5.6 --restart=Never mysql-client -- mysql -h mysql -ppassword
---      

apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 3 # by default is 1
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: k8s.gcr.io/nginx-slim:0.8
        ports:
        - containerPort: 80
          name: web
        volumeMounts:
        - name: www
          mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
  - metadata:
      name: www
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "manual"
      resources:
        requests:
          storage: 1Gi